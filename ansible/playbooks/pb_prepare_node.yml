---
- name: Prepare Node for Kubernetes
  hosts: all
  become: yes
  gather_facts: yes

  tasks:
    - name: Update apt cache and install base packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Ensure legacy iptables are used
      alternatives:
        name: iptables
        path: /usr/sbin/iptables-legacy
        link: /usr/sbin/iptables
      when: ansible_os_family == "Debian"

    - name: Load required kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay

    - name: Ensure kernel modules are loaded on boot
      copy:
        content: |
          br_netfilter
          overlay
        dest: /etc/modules-load.d/k8s.conf
        mode: '0644'

    - name: Set Kubernetes-required sysctl params
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
      loop:
        - { key: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { key: 'net.ipv4.ip_forward', value: '1' }
        - { key: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }

    # --- НАЧАЛО ИСПРАВЛЕНИЯ ---
    - name: Add Docker's official GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc
        mode: '0644'
        force: yes
      when: ansible_os_family == "Debian"

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: ansible_os_family == "Debian"
    # --- КОНЕЦ ИСПРАВЛЕНИЯ ---

    - name: Install containerd
      apt:
        name: containerd.io
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Create containerd config directory
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Configure containerd to use systemd cgroup driver
      shell: |
        containerd config default > /etc/containerd/config.toml
        sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Add Kubernetes APT repository key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v{{ KUBERNETES_SHORT_VERSION }}/deb/Release.key
        dest: /etc/apt/trusted.gpg.d/kubernetes-apt-keyring.asc
        mode: '0644'
      when: ansible_os_family == "Debian"

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v{{ KUBERNETES_SHORT_VERSION }}/deb/ /"
        state: present
      when: ansible_os_family == "Debian"

    - name: Install Kubernetes components
      apt:
        name:
          - "kubelet={{ KUBERNETES_LONG_VERSION }}-1.1"
          - "kubeadm={{ KUBERNETES_LONG_VERSION }}-1.1"
          - "kubectl={{ KUBERNETES_LONG_VERSION }}-1.1"
        state: present
        allow_downgrade: yes
        update_cache: yes # Added for reliability
      when: ansible_os_family == "Debian"

    - name: Hold Kubernetes components at their current version
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
      when: ansible_os_family == "Debian"

    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: yes
