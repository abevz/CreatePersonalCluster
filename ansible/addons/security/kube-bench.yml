# Description: Kubernetes CIS Benchmark security scanner
# Category: security
# Version: latest
# Dependencies: none
# Maintainer: CPC Team

---
- name: Install/Run Kube-bench security scanner
  when: addon_name in ['kube-bench', 'all']
  delegate_to: "{{ groups['control_plane'][0] }}"
  block:
    - name: Set kube-bench version
      ansible.builtin.set_fact:
        kube_bench_target_version: >-
          {{ requested_version if requested_version != '' else (kube_bench_version | default('v0.12.0')) }}

    - name: Create kube-bench namespace
      ansible.builtin.shell: kubectl create namespace kube-bench
      register: kube_bench_ns_result
      changed_when: "'created' in kube_bench_ns_result.stdout"
      failed_when: "'already exists' not in kube_bench_ns_result.stderr and kube_bench_ns_result.rc != 0"

    - name: Create kube-bench job manifest
      ansible.builtin.shell: |
        cat <<EOF | kubectl apply -f -
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: kube-bench
          namespace: kube-bench
        spec:
          template:
            spec:
              hostPID: true
              nodeSelector:
                kubernetes.io/os: linux
              tolerations:
              - key: node-role.kubernetes.io/master
                operator: Exists
                effect: NoSchedule
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
                effect: NoSchedule
              containers:
              - name: kube-bench
                image: aquasec/kube-bench:{{ kube_bench_target_version }}
                command: ["kube-bench"]
                args: ["--benchmark", "cis-1.7"]
                volumeMounts:
                - name: var-lib-etcd
                  mountPath: /var/lib/etcd
                  readOnly: true
                - name: var-lib-kubelet
                  mountPath: /var/lib/kubelet
                  readOnly: true
                - name: var-lib-kube-scheduler
                  mountPath: /var/lib/kube-scheduler
                  readOnly: true
                - name: var-lib-kube-controller-manager
                  mountPath: /var/lib/kube-controller-manager
                  readOnly: true
                - name: etc-systemd
                  mountPath: /etc/systemd
                  readOnly: true
                - name: lib-systemd
                  mountPath: /lib/systemd/
                  readOnly: true
                - name: srv-kubernetes
                  mountPath: /srv/kubernetes/
                  readOnly: true
                - name: etc-kubernetes
                  mountPath: /etc/kubernetes
                  readOnly: true
                - name: usr-bin
                  mountPath: /usr/local/mount-from-host/bin
                  readOnly: true
                - name: etc-cni-netd
                  mountPath: /etc/cni/net.d/
                  readOnly: true
                - name: opt-cni-bin
                  mountPath: /opt/cni/bin/
                  readOnly: true
              restartPolicy: Never
              volumes:
              - name: var-lib-etcd
                hostPath:
                  path: "/var/lib/etcd"
              - name: var-lib-kubelet
                hostPath:
                  path: "/var/lib/kubelet"
              - name: var-lib-kube-scheduler
                hostPath:
                  path: "/var/lib/kube-scheduler"
              - name: var-lib-kube-controller-manager
                hostPath:
                  path: "/var/lib/kube-controller-manager"
              - name: etc-systemd
                hostPath:
                  path: "/etc/systemd"
              - name: lib-systemd
                hostPath:
                  path: "/lib/systemd"
              - name: srv-kubernetes
                hostPath:
                  path: "/srv/kubernetes"
              - name: etc-kubernetes
                hostPath:
                  path: "/etc/kubernetes"
              - name: usr-bin
                hostPath:
                  path: "/usr/bin"
              - name: etc-cni-netd
                hostPath:
                  path: "/etc/cni/net.d/"
              - name: opt-cni-bin
                hostPath:
                  path: "/opt/cni/bin/"
        EOF
      register: kube_bench_job_result
      changed_when: "'configured' in kube_bench_job_result.stdout or 'created' in kube_bench_job_result.stdout"

    - name: Wait for kube-bench job to complete
      ansible.builtin.shell: kubectl wait --for=condition=complete job/kube-bench -n kube-bench --timeout=300s
      changed_when: false

    - name: Display kube-bench results
      ansible.builtin.shell: kubectl logs job/kube-bench -n kube-bench
      register: kube_bench_logs
      changed_when: false

    - name: Display kube-bench installation result
      ansible.builtin.debug:
        msg:
          - "kube-bench security scan completed"
          - "Version: {{ kube_bench_target_version }}"
          - "Check the logs above for security recommendations"
          - "To re-run: kubectl delete job kube-bench -n kube-bench && cpc upgrade-addons kube-bench"
